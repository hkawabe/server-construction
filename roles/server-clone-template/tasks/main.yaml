---
- name: Stop container before converting to template
  community.general.proxmox:
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    node: pve
    vmid: "{{ server_template_id }}"
    state: stopped

- name: Convert container to template
  community.general.proxmox:
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    node: pve
    vmid: "{{ server_template_id }}"
    state: template

- name: Create a full clone of the template container
  community.proxmox.proxmox:
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    node: pve
    vmid: "{{ item.container_id }}"
    clone: "{{ server_template_id }}"
    hostname: "{{ item.hostname }}"
    clone_type: full
    state: present
  loop: "{{ server_clone_list }}"

- name: Fix container parameters
  community.proxmox.proxmox:
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    node: pve
    vmid: "{{ item.container_id }}"
    hostname: "{{ item.hostname }}"
    cores: "{{ item.cores }}"
    memory: "{{ item.memory }}"
    netif:
      net0: "name=eth0,bridge=vmbr0,ip={{ item.ipaddr }},gw={{ gateway_ipaddr }}"
    state: present
  loop: "{{ server_clone_list }}"

- name: Extent disk size
  ansible.builtin.command: >
    pct {{ item.container_id }} resize {{ item.disk_size }}  

- name: Start the cloned containers
  community.general.proxmox:
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    node: pve
    vmid: "{{ item.container_id }}"
    state: started
  loop: "{{ server_clone_list }}"

- name: Wait for containers to be ready asynchronously
  wait_for:
    host: "{{ item.ipaddr }}"
    port: 22
    delay: 10
    timeout: 300
  loop: "{{ server_clone_list }}"
  loop_control:
    label: "{{ item.hostname }}"
  async: 300
  poll: 0

